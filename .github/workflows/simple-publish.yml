name: 🚀 Simple Publish (No Tests)

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  packages: write

jobs:
  publish:
    name: 📦 Publish to npm (Skip Tests)
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          
      - name: 📋 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build project
        run: npm run build
        
      - name: 🏷️ Bump version
        id: version
        run: |
          OLD_VERSION=$(node -p "require('./package.json').version")
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          
          echo "old_version=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          echo "## 📊 Version Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Previous Version:** $OLD_VERSION" >> $GITHUB_STEP_SUMMARY
          echo "- **New Version:** $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
          echo "- **Bump Type:** ${{ github.event.inputs.version_type }}" >> $GITHUB_STEP_SUMMARY
          
      - name: 📝 Commit version bump
        run: |
          git config --local user.email "abdullah.devs@gmail.com"
          git config --local user.name "abdullahMASHUK"
          git add package.json package-lock.json
          git commit -m "🔖 Bump version to ${{ steps.version.outputs.new_version }}"
          
      - name: 📦 Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: 🎉 Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ steps.version.outputs.new_version }}"
          
          # Create release using GitHub CLI
          gh release create "v$VERSION" \
            --title "🎉 NextCloud MCP Server v$VERSION" \
            --notes "## 🚀 What's New in v$VERSION

### ✨ Changes
- Version bumped from ${{ steps.version.outputs.old_version }} to $VERSION
- Bug fixes and improvements

### 📦 Installation
\`\`\`bash
npm install -g nextcloud-mcp-server@$VERSION
\`\`\`

### 🔗 Links
- 📦 [npm Package](https://www.npmjs.com/package/nextcloud-mcp-server)
- 📚 [Documentation](https://github.com/abdullahMASHUK/nextcloud-mcp-server#readme)" \
            --latest
          
      - name: 🏷️ Push changes
        run: |
          git push origin HEAD:master
          
      - name: 📊 Success Summary
        run: |
          echo "## 🎉 Publishing Complete!" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Package Published:** nextcloud-mcp-server@${{ steps.version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ **GitHub Release:** Created" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
          echo "- [npm Package](https://www.npmjs.com/package/nextcloud-mcp-server)" >> $GITHUB_STEP_SUMMARY
          echo "- [GitHub Release](https://github.com/abdullahMASHUK/nextcloud-mcp-server/releases/tag/v${{ steps.version.outputs.new_version }})" >> $GITHUB_STEP_SUMMARY
