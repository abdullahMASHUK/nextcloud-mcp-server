name: 🏷️ Auto Release & Publish

on:
  push:
    branches: [master]
    paths: ['package.json']

jobs:
  check-version:
    name: 🔍 Check Version Changes
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.changed }}
      new_version: ${{ steps.check.outputs.version }}
      
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          
      - name: 🔍 Check if version changed
        id: check
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Get previous version from last commit
          git checkout HEAD~1 -- package.json 2>/dev/null || echo "No previous package.json"
          if [ -f package.json ]; then
            PREVIOUS_VERSION=$(node -p "require('./package.json').version" 2>/dev/null || echo "0.0.0")
          else
            PREVIOUS_VERSION="0.0.0"
          fi
          
          # Restore current package.json
          git checkout HEAD -- package.json
          
          echo "Previous version: $PREVIOUS_VERSION"
          echo "Current version: $CURRENT_VERSION"
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "✅ Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "❌ Version unchanged"
          fi

  create-release:
    name: 🎉 Create GitHub Release
    needs: check-version
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.version_changed == 'true'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🏷️ Create tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag v${{ needs.check-version.outputs.new_version }}
          git push origin v${{ needs.check-version.outputs.new_version }}
          
      - name: 📝 Generate release notes
        id: release_notes
        run: |
          VERSION="${{ needs.check-version.outputs.new_version }}"
          cat > release_notes.md << EOF
          ## 🚀 What's New in v$VERSION
          
          ### ✨ Features & Improvements
          - Updated package to version $VERSION
          - Enhanced functionality and bug fixes
          - Improved performance and stability
          
          ### 📦 Installation
          \`\`\`bash
          npm install -g nextcloud-mcp-server@$VERSION
          \`\`\`
          
          ### 🔗 Links
          - 📦 [npm Package](https://www.npmjs.com/package/nextcloud-mcp-server)
          - 📚 [Documentation](https://github.com/abdullahMASHUK/nextcloud-mcp-server#readme)
          - 🐛 [Report Issues](https://github.com/abdullahMASHUK/nextcloud-mcp-server/issues)
          
          ### 💖 Support
          If this release helped you, please consider giving the project a ⭐ on GitHub!
          EOF
          
      - name: 🎉 Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.new_version }}
          release_name: 🎉 NextCloud MCP Server v${{ needs.check-version.outputs.new_version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
